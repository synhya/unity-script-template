Shader "Hidden/#NAME#"
{
    Properties
    {
    }
    SubShader
    {
        Tags { "RenderType"="Opaque" }
        LOD 100

        Pass
        {
            HLSLINCLUDE
            #pragma vertex vert
            #pragma fragment frag
	
            #include "Packages/com.unity.render-pipelines.universal/ShaderLibrary/Core.hlsl"
            #include "Packages/com.unity.render-pipelines.universal/ShaderLibrary/Lighting.hlsl"

            struct Attributes 
            {
                float4 positionOS	: POSITION;
                float3 normalOS : NORMAL;
            };

            struct Varyings 
            {
                float4 positionCS 	: SV_POSITION;
            };

            Varyings vert (Attributes input)
            {
                Varyings output;

                VertexPositionInputs positionInputs = GetVertexPositionInputs(input.positionOS.xyz);

                output.positionCS = positionInputs.positionCS;
                return output;
            }

            float4 frag (Varyings input) : SV_Target
            {
                return 0.5;
            }
            ENDHLSL
        }

        Pass
        {
            Tags{"LightMode"="ShadowCaster"}
            ZWrite On
            ZTest LEqual
            ColorMask 0
            
            HLSLPROGRAM
            #pragma vertex vert
            #pragma fragment frag
            
            #pragma  multi_compile_shadowcaster
            
            ENDHLSL
        }

        Pass
        {
            Tags 
            {
                "LightMode"="DepthOnly"
            }
            
            HLSLPROGRAM

            #pragma vertex vert
            #pragma fragment frag

            ENDHLSL
        }
         
        Pass
        {
            Tags 
            {
                "LightMode"="DepthNormalsOnly"
            }
            HLSLPROGRAM

            #pragma vertex vert
            #pragma fragment frag

            ENDHLSL
        }
    }
}
